[project]
name = "mip-mcp"
version = "0.1.0"
description = "MIP optimization server using Model Context Protocol with PuLP"
readme = "README.md"
authors = [
    { name = "ohtaman", email = "ohtamans@gmail.com" }
]
requires-python = ">=3.12"
dependencies = [
    "fastmcp>=2.10.6",
    "pyscipopt>=5.5.0",
    "pulp>=2.7.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
mip-mcp = "mip_mcp.mcp_server:mcp_main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.7",
]

[tool.ruff]
# Pythonバージョン設定
target-version = "py312"

# 対象ファイル
src = ["src", "tests"]
extend-exclude = [
    ".tmp",
    "__pycache__",
    ".pytest_cache",
    ".coverage",
    "htmlcov",
]

# 行の長さ制限
line-length = 88

[tool.ruff.lint]
# 有効化するルール
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "UP",     # pyupgrade
    "B",      # flake8-bugbear
    "SIM",    # flake8-simplify
    "I",      # isort
    "N",      # pep8-naming
    "C4",     # flake8-comprehensions
    "PTH",    # flake8-use-pathlib
    "RUF",    # Ruff-specific rules
]

# 無視するルール
ignore = [
    "E501",   # line too long (handled by formatter)
    "B008",   # do not perform function calls in argument defaults
    "UP007",  # Use X | Y for type annotations (keep Optional for clarity)
]

# ファイルごとのルール設定
[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = [
    "S101",   # Use of assert detected
    "PLR2004", # Magic value used in comparison
]

[tool.ruff.format]
# コードフォーマット設定
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

